@use 'variables' as *;

@mixin mobile {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-sm}) and (max-width: #{$breakpoint-lg - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: #{$breakpoint-xl}) {
    @content;
  }
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-md $spacing-xl;
  border: none;
  border-radius: $border-radius-lg;
  font-family: $font-family-primary;
  font-weight: $font-weight-medium;
  font-size: $font-size-base;
  line-height: $line-height-tight;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal;
  position: relative;
  overflow: hidden;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.3);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background: $primary-color;
  color: $text-white;
  box-shadow: $shadow-md;

  &:hover:not(:disabled) {
    background: $primary-dark;
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }

  &:active {
    transform: translateY(0);
    box-shadow: $shadow-md;
  }
}

@mixin button-secondary {
  @include button-base;
  background: transparent;
  color: $primary-color;
  border: 2px solid $primary-color;

  &:hover:not(:disabled) {
    background: $primary-color;
    color: $text-white;
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

@mixin form-input {
  width: 100%;
  padding: $spacing-md;
  border: 2px solid $border-color;
  border-radius: $border-radius-md;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  color: $text-primary;
  background: $background-primary;
  transition: all $transition-normal;

  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
  }

  &:invalid {
    border-color: $error-color;
  }

  &::placeholder {
    color: $text-light;
  }
}

@mixin form-label {
  display: block;
  margin-bottom: $spacing-sm;
  font-family: $font-family-primary;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  color: $text-primary;
}

@mixin form-error {
  display: block;
  margin-top: $spacing-xs;
  font-size: $font-size-xs;
  color: $error-color;
  min-height: 1.25rem;
}

@mixin card {
  background: $background-primary;
  border-radius: $border-radius-xl;
  box-shadow: $shadow-md;
  padding: $spacing-xl;
  transition: all $transition-normal;

  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }
}

@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: $transition-normal) {
  animation: slideUp $duration ease-out;
}

@mixin pulse($duration: 2s) {
  animation: pulse $duration infinite;
}

@mixin gradient-primary {
  background: linear-gradient(135deg, $primary-color 0%, $primary-light 100%);
}

@mixin gradient-text {
  background: $background-gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    display: block;
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
